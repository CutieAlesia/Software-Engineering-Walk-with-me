// Generated by view binder compiler. Do not edit!
package com.walkwithme.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.walkwithme.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFirstBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button FriendlistButton;

  @NonNull
  public final Button LogoutButton;

  @NonNull
  public final Button SettingsButton;

  @NonNull
  public final Button SwipeButton;

  @NonNull
  public final Button TopUsersButton;

  private FragmentFirstBinding(@NonNull ConstraintLayout rootView, @NonNull Button FriendlistButton,
      @NonNull Button LogoutButton, @NonNull Button SettingsButton, @NonNull Button SwipeButton,
      @NonNull Button TopUsersButton) {
    this.rootView = rootView;
    this.FriendlistButton = FriendlistButton;
    this.LogoutButton = LogoutButton;
    this.SettingsButton = SettingsButton;
    this.SwipeButton = SwipeButton;
    this.TopUsersButton = TopUsersButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFirstBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFirstBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_first, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFirstBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.FriendlistButton;
      Button FriendlistButton = ViewBindings.findChildViewById(rootView, id);
      if (FriendlistButton == null) {
        break missingId;
      }

      id = R.id.LogoutButton;
      Button LogoutButton = ViewBindings.findChildViewById(rootView, id);
      if (LogoutButton == null) {
        break missingId;
      }

      id = R.id.SettingsButton;
      Button SettingsButton = ViewBindings.findChildViewById(rootView, id);
      if (SettingsButton == null) {
        break missingId;
      }

      id = R.id.SwipeButton;
      Button SwipeButton = ViewBindings.findChildViewById(rootView, id);
      if (SwipeButton == null) {
        break missingId;
      }

      id = R.id.TopUsersButton;
      Button TopUsersButton = ViewBindings.findChildViewById(rootView, id);
      if (TopUsersButton == null) {
        break missingId;
      }

      return new FragmentFirstBinding((ConstraintLayout) rootView, FriendlistButton, LogoutButton,
          SettingsButton, SwipeButton, TopUsersButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
